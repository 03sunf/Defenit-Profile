{"ast":null,"code":"import _objectWithoutPropertiesLoose from '@babel/runtime/helpers/esm/objectWithoutPropertiesLoose';\nimport _extends from '@babel/runtime/helpers/esm/extends';\nimport _inheritsLoose from '@babel/runtime/helpers/esm/inheritsLoose';\nimport React, { Component } from 'react';\nimport { createPortal } from 'react-dom';\nimport { Popper, Manager, Reference } from 'react-popper';\nvar TooltipContext = /*#__PURE__*/React.createContext({}); // eslint-disable-next-line @typescript-eslint/no-explicit-any\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\n\nvar callAll = function callAll() {\n  for (var _len = arguments.length, fns = new Array(_len), _key = 0; _key < _len; _key++) {\n    fns[_key] = arguments[_key];\n  }\n\n  return function () {\n    for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      args[_key2] = arguments[_key2];\n    }\n\n    return fns.forEach(function (fn) {\n      return fn && fn.apply(void 0, args);\n    });\n  };\n};\n\nvar noop = function noop() {// do nothing\n};\n\nvar canUseDOM = function canUseDOM() {\n  return !!(typeof window !== 'undefined' && window.document && window.document.createElement);\n};\n\nvar setRef = function setRef(ref, node) {\n  if (typeof ref === 'function') {\n    return ref(node);\n  } else if (ref != null) {\n    ref.current = node;\n  }\n};\n\nvar Tooltip = /*#__PURE__*/function (_Component) {\n  _inheritsLoose(Tooltip, _Component);\n\n  function Tooltip() {\n    var _this;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _Component.call.apply(_Component, [this].concat(args)) || this;\n    _this.observer = void 0;\n    _this.tooltipRef = void 0;\n\n    _this.handleOutsideClick = function (event) {\n      if (_this.tooltipRef && !_this.tooltipRef.contains(event.target)) {\n        var parentOutsideClickHandler = _this.context.parentOutsideClickHandler;\n        var _this$props = _this.props,\n            hideTooltip = _this$props.hideTooltip,\n            clearScheduled = _this$props.clearScheduled;\n        clearScheduled();\n        hideTooltip();\n\n        if (parentOutsideClickHandler) {\n          parentOutsideClickHandler(event);\n        }\n      }\n    };\n\n    _this.handleOutsideRightClick = function (event) {\n      if (_this.tooltipRef && !_this.tooltipRef.contains(event.target)) {\n        var parentOutsideRightClickHandler = _this.context.parentOutsideRightClickHandler;\n        var _this$props2 = _this.props,\n            hideTooltip = _this$props2.hideTooltip,\n            clearScheduled = _this$props2.clearScheduled;\n        clearScheduled();\n        hideTooltip();\n\n        if (parentOutsideRightClickHandler) {\n          parentOutsideRightClickHandler(event);\n        }\n      }\n    };\n\n    _this.addOutsideClickHandler = function () {\n      document.body.addEventListener('touchend', _this.handleOutsideClick);\n      document.body.addEventListener('click', _this.handleOutsideClick);\n    };\n\n    _this.removeOutsideClickHandler = function () {\n      document.body.removeEventListener('touchend', _this.handleOutsideClick);\n      document.body.removeEventListener('click', _this.handleOutsideClick);\n    };\n\n    _this.addOutsideRightClickHandler = function () {\n      return document.body.addEventListener('contextmenu', _this.handleOutsideRightClick);\n    };\n\n    _this.removeOutsideRightClickHandler = function () {\n      return document.body.removeEventListener('contextmenu', _this.handleOutsideRightClick);\n    };\n\n    _this.getTooltipRef = function (node) {\n      _this.tooltipRef = node;\n      setRef(_this.props.innerRef, node);\n    };\n\n    _this.getArrowProps = function (props) {\n      if (props === void 0) {\n        props = {};\n      }\n\n      return _extends({}, props, {\n        style: _extends({}, props.style, _this.props.arrowProps.style)\n      });\n    };\n\n    _this.getTooltipProps = function (props) {\n      if (props === void 0) {\n        props = {};\n      }\n\n      return _extends({}, props, _this.isTriggeredBy('hover') && {\n        onMouseEnter: callAll(_this.props.clearScheduled, props.onMouseEnter),\n        onMouseLeave: callAll(_this.props.hideTooltip, props.onMouseLeave)\n      }, {\n        style: _extends({}, props.style, _this.props.style)\n      });\n    };\n\n    _this.contextValue = {\n      isParentNoneTriggered: _this.props.trigger === 'none',\n      addParentOutsideClickHandler: _this.addOutsideClickHandler,\n      addParentOutsideRightClickHandler: _this.addOutsideRightClickHandler,\n      parentOutsideClickHandler: _this.handleOutsideClick,\n      parentOutsideRightClickHandler: _this.handleOutsideRightClick,\n      removeParentOutsideClickHandler: _this.removeOutsideClickHandler,\n      removeParentOutsideRightClickHandler: _this.removeOutsideRightClickHandler\n    };\n    return _this;\n  }\n\n  var _proto = Tooltip.prototype;\n\n  _proto.componentDidMount = function componentDidMount() {\n    var _this2 = this;\n\n    var observer = this.observer = new MutationObserver(function () {\n      _this2.props.update();\n    });\n    observer.observe(this.tooltipRef, this.props.mutationObserverOptions);\n\n    if (this.isTriggeredBy('hover') || this.isTriggeredBy('click') || this.isTriggeredBy('right-click')) {\n      var _this$context = this.context,\n          removeParentOutsideClickHandler = _this$context.removeParentOutsideClickHandler,\n          removeParentOutsideRightClickHandler = _this$context.removeParentOutsideRightClickHandler;\n      this.addOutsideClickHandler();\n      this.addOutsideRightClickHandler();\n\n      if (removeParentOutsideClickHandler) {\n        removeParentOutsideClickHandler();\n      }\n\n      if (removeParentOutsideRightClickHandler) {\n        removeParentOutsideRightClickHandler();\n      }\n    }\n  };\n\n  _proto.componentDidUpdate = function componentDidUpdate() {\n    if (this.props.closeOnReferenceHidden && this.props.isReferenceHidden) {\n      this.props.hideTooltip();\n    }\n  };\n\n  _proto.componentWillUnmount = function componentWillUnmount() {\n    if (this.observer) {\n      this.observer.disconnect();\n    }\n\n    if (this.isTriggeredBy('hover') || this.isTriggeredBy('click') || this.isTriggeredBy('right-click')) {\n      var _this$context2 = this.context,\n          isParentNoneTriggered = _this$context2.isParentNoneTriggered,\n          addParentOutsideClickHandler = _this$context2.addParentOutsideClickHandler,\n          addParentOutsideRightClickHandler = _this$context2.addParentOutsideRightClickHandler;\n      this.removeOutsideClickHandler();\n      this.removeOutsideRightClickHandler();\n      this.handleOutsideClick = undefined;\n      this.handleOutsideRightClick = undefined;\n\n      if (!isParentNoneTriggered && addParentOutsideClickHandler) {\n        addParentOutsideClickHandler();\n      }\n\n      if (!isParentNoneTriggered && addParentOutsideRightClickHandler) {\n        addParentOutsideRightClickHandler();\n      }\n    }\n  };\n\n  _proto.render = function render() {\n    var _this$props3 = this.props,\n        arrowProps = _this$props3.arrowProps,\n        placement = _this$props3.placement,\n        tooltip = _this$props3.tooltip;\n    return /*#__PURE__*/React.createElement(TooltipContext.Provider, {\n      value: this.contextValue\n    }, tooltip({\n      arrowRef: arrowProps.ref,\n      getArrowProps: this.getArrowProps,\n      getTooltipProps: this.getTooltipProps,\n      placement: placement,\n      tooltipRef: this.getTooltipRef\n    }));\n  };\n\n  _proto.isTriggeredBy = function isTriggeredBy(event) {\n    var trigger = this.props.trigger;\n    return trigger === event || Array.isArray(trigger) && trigger.includes(event);\n  };\n\n  return Tooltip;\n}(Component);\n\nTooltip.contextType = TooltipContext;\nvar DEFAULT_MUTATION_OBSERVER_CONFIG = {\n  childList: true,\n  subtree: true\n};\n\nvar TooltipTrigger = /*#__PURE__*/function (_Component) {\n  _inheritsLoose(TooltipTrigger, _Component);\n\n  function TooltipTrigger() {\n    var _this;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _Component.call.apply(_Component, [this].concat(args)) || this;\n    _this.state = {\n      tooltipShown: _this.props.defaultTooltipShown\n    };\n    _this.hideTimeout = void 0;\n    _this.showTimeout = void 0;\n    _this.popperOffset = void 0;\n\n    _this.setTooltipState = function (state) {\n      var cb = function cb() {\n        return _this.props.onVisibilityChange(state.tooltipShown);\n      };\n\n      _this.isControlled() ? cb() : _this.setState(state, cb);\n    };\n\n    _this.clearScheduled = function () {\n      clearTimeout(_this.hideTimeout);\n      clearTimeout(_this.showTimeout);\n    };\n\n    _this.showTooltip = function (_ref) {\n      var pageX = _ref.pageX,\n          pageY = _ref.pageY;\n\n      _this.clearScheduled();\n\n      var state = {\n        tooltipShown: true\n      };\n\n      if (_this.props.followCursor) {\n        state = _extends({}, state, {\n          pageX: pageX,\n          pageY: pageY\n        });\n      }\n\n      _this.showTimeout = window.setTimeout(function () {\n        return _this.setTooltipState(state);\n      }, _this.props.delayShow);\n    };\n\n    _this.hideTooltip = function () {\n      _this.clearScheduled();\n\n      _this.hideTimeout = window.setTimeout(function () {\n        return _this.setTooltipState({\n          tooltipShown: false\n        });\n      }, _this.props.delayHide);\n    };\n\n    _this.toggleTooltip = function (_ref2) {\n      var pageX = _ref2.pageX,\n          pageY = _ref2.pageY;\n      var action = _this.getState() ? 'hideTooltip' : 'showTooltip';\n\n      _this[action]({\n        pageX: pageX,\n        pageY: pageY\n      });\n    };\n\n    _this.clickToggle = function (event) {\n      event.preventDefault();\n      var pageX = event.pageX,\n          pageY = event.pageY;\n      var action = _this.props.followCursor ? 'showTooltip' : 'toggleTooltip';\n\n      _this[action]({\n        pageX: pageX,\n        pageY: pageY\n      });\n    };\n\n    _this.contextMenuToggle = function (event) {\n      event.preventDefault();\n      var pageX = event.pageX,\n          pageY = event.pageY;\n      var action = _this.props.followCursor ? 'showTooltip' : 'toggleTooltip';\n\n      _this[action]({\n        pageX: pageX,\n        pageY: pageY\n      });\n    };\n\n    _this.getTriggerProps = function (props) {\n      if (props === void 0) {\n        props = {};\n      }\n\n      return _extends({}, props, _this.isTriggeredBy('click') && {\n        onClick: callAll(_this.clickToggle, props.onClick),\n        onTouchEnd: callAll(_this.clickToggle, props.onTouchEnd)\n      }, _this.isTriggeredBy('right-click') && {\n        onContextMenu: callAll(_this.contextMenuToggle, props.onContextMenu)\n      }, _this.isTriggeredBy('hover') && _extends({\n        onMouseEnter: callAll(_this.showTooltip, props.onMouseEnter),\n        onMouseLeave: callAll(_this.hideTooltip, props.onMouseLeave)\n      }, _this.props.followCursor && {\n        onMouseMove: callAll(_this.showTooltip, props.onMouseMove)\n      }), _this.isTriggeredBy('focus') && {\n        onFocus: callAll(_this.showTooltip, props.onFocus),\n        onBlur: callAll(_this.hideTooltip, props.onBlur)\n      });\n    };\n\n    return _this;\n  }\n\n  var _proto = TooltipTrigger.prototype;\n\n  _proto.componentWillUnmount = function componentWillUnmount() {\n    this.clearScheduled();\n  };\n\n  _proto.render = function render() {\n    var _this2 = this;\n\n    var _this$props = this.props,\n        children = _this$props.children,\n        tooltip = _this$props.tooltip,\n        placement = _this$props.placement,\n        trigger = _this$props.trigger,\n        getTriggerRef = _this$props.getTriggerRef,\n        modifiers = _this$props.modifiers,\n        closeOnReferenceHidden = _this$props.closeOnReferenceHidden,\n        usePortal = _this$props.usePortal,\n        portalContainer = _this$props.portalContainer,\n        followCursor = _this$props.followCursor,\n        getTooltipRef = _this$props.getTooltipRef,\n        mutationObserverOptions = _this$props.mutationObserverOptions,\n        restProps = _objectWithoutPropertiesLoose(_this$props, [\"children\", \"tooltip\", \"placement\", \"trigger\", \"getTriggerRef\", \"modifiers\", \"closeOnReferenceHidden\", \"usePortal\", \"portalContainer\", \"followCursor\", \"getTooltipRef\", \"mutationObserverOptions\"]);\n\n    var popper = /*#__PURE__*/React.createElement(Popper, _extends({\n      innerRef: getTooltipRef,\n      placement: placement,\n      modifiers: [{\n        name: 'followCursor',\n        enabled: followCursor,\n        phase: 'main',\n        fn: function fn(data) {\n          _this2.popperOffset = data.state.rects.popper;\n        }\n      }].concat(modifiers)\n    }, restProps), function (_ref3) {\n      var ref = _ref3.ref,\n          style = _ref3.style,\n          placement = _ref3.placement,\n          arrowProps = _ref3.arrowProps,\n          isReferenceHidden = _ref3.isReferenceHidden,\n          update = _ref3.update;\n\n      if (followCursor && _this2.popperOffset) {\n        var _this2$state = _this2.state,\n            pageX = _this2$state.pageX,\n            pageY = _this2$state.pageY;\n        var _this2$popperOffset = _this2.popperOffset,\n            width = _this2$popperOffset.width,\n            height = _this2$popperOffset.height;\n        var x = pageX + width > window.pageXOffset + document.body.offsetWidth ? pageX - width : pageX;\n        var y = pageY + height > window.pageYOffset + document.body.offsetHeight ? pageY - height : pageY;\n        style.transform = \"translate3d(\" + x + \"px, \" + y + \"px, 0\";\n      }\n\n      return /*#__PURE__*/React.createElement(Tooltip, _extends({\n        arrowProps: arrowProps,\n        closeOnReferenceHidden: closeOnReferenceHidden,\n        isReferenceHidden: isReferenceHidden,\n        placement: placement,\n        update: update,\n        style: style,\n        tooltip: tooltip,\n        trigger: trigger,\n        mutationObserverOptions: mutationObserverOptions\n      }, {\n        clearScheduled: _this2.clearScheduled,\n        hideTooltip: _this2.hideTooltip,\n        innerRef: ref\n      }));\n    });\n    return /*#__PURE__*/React.createElement(Manager, null, /*#__PURE__*/React.createElement(Reference, {\n      innerRef: getTriggerRef\n    }, function (_ref4) {\n      var ref = _ref4.ref;\n      return children({\n        getTriggerProps: _this2.getTriggerProps,\n        triggerRef: ref\n      });\n    }), this.getState() && (usePortal ? /*#__PURE__*/createPortal(popper, portalContainer) : popper));\n  };\n\n  _proto.isControlled = function isControlled() {\n    return this.props.tooltipShown !== undefined;\n  };\n\n  _proto.getState = function getState() {\n    return this.isControlled() ? this.props.tooltipShown : this.state.tooltipShown;\n  };\n\n  _proto.isTriggeredBy = function isTriggeredBy(event) {\n    var trigger = this.props.trigger;\n    return trigger === event || Array.isArray(trigger) && trigger.includes(event);\n  };\n\n  return TooltipTrigger;\n}(Component);\n\nTooltipTrigger.defaultProps = {\n  closeOnReferenceHidden: true,\n  defaultTooltipShown: false,\n  delayHide: 0,\n  delayShow: 0,\n  followCursor: false,\n  onVisibilityChange: noop,\n  placement: 'right',\n  portalContainer: canUseDOM() ? document.body : null,\n  trigger: 'hover',\n  usePortal: canUseDOM(),\n  mutationObserverOptions: DEFAULT_MUTATION_OBSERVER_CONFIG,\n  modifiers: []\n};\nexport default TooltipTrigger;","map":{"version":3,"sources":["../../src/utils.ts","../../src/Tooltip.tsx","../../src/TooltipTrigger.tsx"],"names":["TooltipContext","React","callAll","fns","args","fn","noop","canUseDOM","window","setRef","ref","Tooltip","Component","contextType","observer","tooltipRef","componentDidMount","removeParentOutsideClickHandler","removeParentOutsideRightClickHandler","componentDidUpdate","componentWillUnmount","isParentNoneTriggered","addParentOutsideClickHandler","addParentOutsideRightClickHandler","render","arrowProps","placement","tooltip","contextValue","arrowRef","getArrowProps","getTooltipProps","getTooltipRef","isTriggeredBy","trigger","Array","handleOutsideClick","event","parentOutsideClickHandler","hideTooltip","clearScheduled","handleOutsideRightClick","parentOutsideRightClickHandler","addOutsideClickHandler","document","removeOutsideClickHandler","addOutsideRightClickHandler","removeOutsideRightClickHandler","props","style","onMouseEnter","onMouseLeave","DEFAULT_MUTATION_OBSERVER_CONFIG","childList","subtree","TooltipTrigger","defaultProps","closeOnReferenceHidden","defaultTooltipShown","delayHide","delayShow","followCursor","onVisibilityChange","portalContainer","usePortal","mutationObserverOptions","modifiers","state","tooltipShown","hideTimeout","showTimeout","popperOffset","children","getTriggerRef","restProps","popper","name","enabled","phase","data","isReferenceHidden","update","pageX","pageY","width","height","x","y","getTriggerProps","triggerRef","createPortal","isControlled","getState","setTooltipState","cb","clearTimeout","showTooltip","toggleTooltip","action","clickToggle","contextMenuToggle","onClick","onTouchEnd","onContextMenu","onMouseMove","onFocus","onBlur"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Ref } from './types';\n\nexport const TooltipContext = React.createContext({});\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\ntype Fn = ((...args: any[]) => void) | undefined;\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport const callAll = (...fns: Fn[]) => (...args: any[]) =>\n  fns.forEach((fn) => fn && fn(...args));\n\nexport const noop = () => {\n  // do nothing\n};\n\nexport const canUseDOM = () =>\n  !!(\n    typeof window !== 'undefined' &&\n    window.document &&\n    window.document.createElement\n  );\n\nexport const setRef = (ref: Ref, node: HTMLElement | null) => {\n  if (typeof ref === 'function') {\n    return ref(node);\n  } else if (ref != null) {\n    ref.current = node;\n  }\n};\n","import React, { Component } from 'react';\nimport {\n  GetArrowPropsArg,\n  GetTooltipPropsArg,\n  TooltipProps,\n  TriggerTypes,\n} from './types';\nimport { callAll, TooltipContext, setRef } from './utils';\n\nclass Tooltip extends Component<TooltipProps> {\n  public static contextType = TooltipContext;\n\n  private observer?: MutationObserver;\n  private tooltipRef!: HTMLElement | null;\n\n  public componentDidMount() {\n    const observer = (this.observer = new MutationObserver(() => {\n      this.props.update();\n    }));\n    observer.observe(this.tooltipRef!, this.props.mutationObserverOptions);\n\n    if (\n      this.isTriggeredBy('hover') ||\n      this.isTriggeredBy('click') ||\n      this.isTriggeredBy('right-click')\n    ) {\n      const {\n        removeParentOutsideClickHandler,\n        removeParentOutsideRightClickHandler,\n      } = this.context;\n      this.addOutsideClickHandler();\n      this.addOutsideRightClickHandler();\n      if (removeParentOutsideClickHandler) {\n        removeParentOutsideClickHandler();\n      }\n      if (removeParentOutsideRightClickHandler) {\n        removeParentOutsideRightClickHandler();\n      }\n    }\n  }\n\n  public componentDidUpdate() {\n    if (this.props.closeOnReferenceHidden && this.props.isReferenceHidden) {\n      this.props.hideTooltip();\n    }\n  }\n\n  public componentWillUnmount() {\n    if (this.observer) {\n      this.observer.disconnect();\n    }\n\n    if (\n      this.isTriggeredBy('hover') ||\n      this.isTriggeredBy('click') ||\n      this.isTriggeredBy('right-click')\n    ) {\n      const {\n        isParentNoneTriggered,\n        addParentOutsideClickHandler,\n        addParentOutsideRightClickHandler,\n      } = this.context;\n      this.removeOutsideClickHandler();\n      this.removeOutsideRightClickHandler();\n      this.handleOutsideClick = undefined;\n      this.handleOutsideRightClick = undefined;\n      if (!isParentNoneTriggered && addParentOutsideClickHandler) {\n        addParentOutsideClickHandler();\n      }\n      if (!isParentNoneTriggered && addParentOutsideRightClickHandler) {\n        addParentOutsideRightClickHandler();\n      }\n    }\n  }\n\n  public render() {\n    const { arrowProps, placement, tooltip } = this.props;\n\n    return (\n      <TooltipContext.Provider value={this.contextValue}>\n        {tooltip({\n          arrowRef: arrowProps.ref,\n          getArrowProps: this.getArrowProps,\n          getTooltipProps: this.getTooltipProps,\n          placement,\n          tooltipRef: this.getTooltipRef,\n        })}\n      </TooltipContext.Provider>\n    );\n  }\n\n  private isTriggeredBy(event: TriggerTypes) {\n    const { trigger } = this.props;\n    return (\n      trigger === event || (Array.isArray(trigger) && trigger.includes(event))\n    );\n  }\n\n  private handleOutsideClick?: EventListener = (event) => {\n    if (this.tooltipRef && !this.tooltipRef.contains(event.target as Node)) {\n      const { parentOutsideClickHandler } = this.context;\n      const { hideTooltip, clearScheduled } = this.props;\n\n      clearScheduled();\n      hideTooltip();\n      if (parentOutsideClickHandler) {\n        parentOutsideClickHandler(event);\n      }\n    }\n  };\n\n  private handleOutsideRightClick?: EventListener = (event) => {\n    if (this.tooltipRef && !this.tooltipRef.contains(event.target as Node)) {\n      const { parentOutsideRightClickHandler } = this.context;\n      const { hideTooltip, clearScheduled } = this.props;\n\n      clearScheduled();\n      hideTooltip();\n      if (parentOutsideRightClickHandler) {\n        parentOutsideRightClickHandler(event);\n      }\n    }\n  };\n\n  private addOutsideClickHandler = () => {\n    document.body.addEventListener('touchend', this.handleOutsideClick!);\n    document.body.addEventListener('click', this.handleOutsideClick!);\n  };\n\n  private removeOutsideClickHandler = () => {\n    document.body.removeEventListener('touchend', this.handleOutsideClick!);\n    document.body.removeEventListener('click', this.handleOutsideClick!);\n  };\n\n  private addOutsideRightClickHandler = () =>\n    document.body.addEventListener(\n      'contextmenu',\n      this.handleOutsideRightClick!\n    );\n\n  private removeOutsideRightClickHandler = () =>\n    document.body.removeEventListener(\n      'contextmenu',\n      this.handleOutsideRightClick!\n    );\n\n  private getTooltipRef = (node: HTMLElement | null) => {\n    this.tooltipRef = node;\n    setRef(this.props.innerRef, node);\n  };\n\n  private getArrowProps = (props: GetArrowPropsArg = {}) => ({\n    ...props,\n    style: { ...props.style, ...this.props.arrowProps.style },\n  });\n\n  private getTooltipProps = (props: GetTooltipPropsArg = {}) => ({\n    ...props,\n    ...(this.isTriggeredBy('hover') && {\n      onMouseEnter: callAll(this.props.clearScheduled, props.onMouseEnter),\n      onMouseLeave: callAll(this.props.hideTooltip, props.onMouseLeave),\n    }),\n    style: { ...props.style, ...this.props.style },\n  });\n\n  private contextValue = {\n    isParentNoneTriggered: this.props.trigger === 'none',\n    addParentOutsideClickHandler: this.addOutsideClickHandler,\n    addParentOutsideRightClickHandler: this.addOutsideRightClickHandler,\n    parentOutsideClickHandler: this.handleOutsideClick,\n    parentOutsideRightClickHandler: this.handleOutsideRightClick,\n    removeParentOutsideClickHandler: this.removeOutsideClickHandler,\n    removeParentOutsideRightClickHandler: this.removeOutsideRightClickHandler,\n  };\n}\n\nexport default Tooltip;\n","/**\n * @author Mohsin Ul Haq <mohsinulhaq01@gmail.com>\n */\nimport React, { Component } from 'react';\nimport { createPortal } from 'react-dom';\nimport { Rect } from '@popperjs/core';\nimport { Manager, Popper, Reference } from 'react-popper';\nimport Tooltip from './Tooltip';\nimport { callAll, canUseDOM, noop } from './utils';\nimport {\n  GetTriggerPropsArg,\n  TooltipTriggerProps,\n  TooltipTriggerState,\n  TriggerTypes,\n} from './types';\n\nconst DEFAULT_MUTATION_OBSERVER_CONFIG: MutationObserverInit = {\n  childList: true,\n  subtree: true,\n};\n\nclass TooltipTrigger extends Component<\n  TooltipTriggerProps,\n  TooltipTriggerState\n> {\n  public static defaultProps = {\n    closeOnReferenceHidden: true,\n    defaultTooltipShown: false,\n    delayHide: 0,\n    delayShow: 0,\n    followCursor: false,\n    onVisibilityChange: noop,\n    placement: 'right',\n    portalContainer: canUseDOM() ? document.body : null,\n    trigger: 'hover',\n    usePortal: canUseDOM(),\n    mutationObserverOptions: DEFAULT_MUTATION_OBSERVER_CONFIG,\n    modifiers: [],\n  };\n\n  public state: TooltipTriggerState = {\n    tooltipShown: this.props.defaultTooltipShown,\n  };\n\n  private hideTimeout?: number;\n  private showTimeout?: number;\n  private popperOffset?: Rect;\n\n  public componentWillUnmount() {\n    this.clearScheduled();\n  }\n\n  public render() {\n    const {\n      children,\n      tooltip,\n      placement,\n      trigger,\n      getTriggerRef,\n      modifiers,\n      closeOnReferenceHidden,\n      usePortal,\n      portalContainer,\n      followCursor,\n      getTooltipRef,\n      mutationObserverOptions,\n      ...restProps\n    } = this.props;\n\n    const popper = (\n      <Popper\n        innerRef={getTooltipRef}\n        placement={placement}\n        modifiers={[\n          {\n            name: 'followCursor',\n            enabled: followCursor,\n            phase: 'main',\n            fn: (data) => {\n              this.popperOffset = data.state.rects.popper;\n            },\n          },\n          ...modifiers,\n        ]}\n        {...restProps}\n      >\n        {({ ref, style, placement, arrowProps, isReferenceHidden, update }) => {\n          if (followCursor && this.popperOffset) {\n            const { pageX, pageY } = this.state;\n            const { width, height } = this.popperOffset;\n            const x =\n              pageX! + width > window.pageXOffset + document.body.offsetWidth\n                ? pageX! - width\n                : pageX;\n            const y =\n              pageY! + height > window.pageYOffset + document.body.offsetHeight\n                ? pageY! - height\n                : pageY;\n            style.transform = `translate3d(${x}px, ${y}px, 0`;\n          }\n\n          return (\n            <Tooltip\n              {...{\n                arrowProps,\n                closeOnReferenceHidden,\n                isReferenceHidden,\n                placement,\n                update,\n                style,\n                tooltip,\n                trigger,\n                mutationObserverOptions,\n              }}\n              clearScheduled={this.clearScheduled}\n              hideTooltip={this.hideTooltip}\n              innerRef={ref}\n            />\n          );\n        }}\n      </Popper>\n    );\n\n    return (\n      <Manager>\n        <Reference innerRef={getTriggerRef}>\n          {({ ref }) =>\n            children({ getTriggerProps: this.getTriggerProps, triggerRef: ref })\n          }\n        </Reference>\n        {this.getState() &&\n          (usePortal ? createPortal(popper, portalContainer) : popper)}\n      </Manager>\n    );\n  }\n\n  private isControlled() {\n    return this.props.tooltipShown !== undefined;\n  }\n\n  private getState() {\n    return this.isControlled()\n      ? this.props.tooltipShown\n      : this.state.tooltipShown;\n  }\n\n  private setTooltipState = (state: TooltipTriggerState) => {\n    const cb = () => this.props.onVisibilityChange(state.tooltipShown);\n    this.isControlled() ? cb() : this.setState(state, cb);\n  };\n\n  private clearScheduled = () => {\n    clearTimeout(this.hideTimeout);\n    clearTimeout(this.showTimeout);\n  };\n\n  private showTooltip = ({\n    pageX,\n    pageY,\n  }: {\n    pageX: number;\n    pageY: number;\n  }) => {\n    this.clearScheduled();\n    let state: TooltipTriggerState = {\n      tooltipShown: true,\n    };\n    if (this.props.followCursor) {\n      state = {\n        ...state,\n        pageX,\n        pageY,\n      };\n    }\n    this.showTimeout = window.setTimeout(\n      () => this.setTooltipState(state),\n      this.props.delayShow\n    );\n  };\n\n  private hideTooltip = () => {\n    this.clearScheduled();\n    this.hideTimeout = window.setTimeout(\n      () => this.setTooltipState({ tooltipShown: false }),\n      this.props.delayHide\n    );\n  };\n\n  private toggleTooltip = ({\n    pageX,\n    pageY,\n  }: {\n    pageX: number;\n    pageY: number;\n  }) => {\n    const action = this.getState() ? 'hideTooltip' : 'showTooltip';\n    this[action]({ pageX, pageY });\n  };\n\n  private clickToggle: React.MouseEventHandler = (event: React.MouseEvent) => {\n    event.preventDefault();\n    const { pageX, pageY } = event;\n    const action = this.props.followCursor ? 'showTooltip' : 'toggleTooltip';\n    this[action]({ pageX, pageY });\n  };\n\n  private contextMenuToggle: React.MouseEventHandler = (event) => {\n    event.preventDefault();\n    const { pageX, pageY } = event;\n    const action = this.props.followCursor ? 'showTooltip' : 'toggleTooltip';\n    this[action]({ pageX, pageY });\n  };\n\n  private isTriggeredBy(event: TriggerTypes) {\n    const { trigger } = this.props;\n    return (\n      trigger === event || (Array.isArray(trigger) && trigger.includes(event))\n    );\n  }\n\n  private getTriggerProps = (props: GetTriggerPropsArg = {}) => {\n    return {\n      ...props,\n      ...(this.isTriggeredBy('click') && {\n        onClick: callAll(this.clickToggle, props.onClick),\n        onTouchEnd: callAll(this.clickToggle, props.onTouchEnd),\n      }),\n      ...(this.isTriggeredBy('right-click') && {\n        onContextMenu: callAll(this.contextMenuToggle, props.onContextMenu),\n      }),\n      ...(this.isTriggeredBy('hover') && {\n        onMouseEnter: callAll(this.showTooltip, props.onMouseEnter),\n        onMouseLeave: callAll(this.hideTooltip, props.onMouseLeave),\n        ...(this.props.followCursor && {\n          onMouseMove: callAll(this.showTooltip, props.onMouseMove),\n        }),\n      }),\n      ...(this.isTriggeredBy('focus') && {\n        onFocus: callAll(this.showTooltip, props.onFocus),\n        onBlur: callAll(this.hideTooltip, props.onBlur),\n      }),\n    };\n  };\n}\n\nexport default TooltipTrigger;\n"]},"metadata":{},"sourceType":"module"}